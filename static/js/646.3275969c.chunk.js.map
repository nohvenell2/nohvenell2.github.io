{"version":3,"file":"static/js/646.3275969c.chunk.js","mappings":"wJAkDA,MAAMA,EAAS,CACbC,UAAW,CACTC,QAAS,OACTC,WAAY,SACZC,MAAO,SAETC,MAAO,CACLC,KAAM,EACNC,QAAS,MACTC,SAAU,OACVC,aAAc,cACdC,OAAQ,kBAEVC,OAAQ,CACNJ,QAAS,WACTC,SAAU,OACVC,aAAc,cACdC,OAAQ,iBACRE,gBAAiB,UACjBC,MAAO,QACPC,OAAQ,YAIZ,EAxEA,WACE,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAC7BC,EAAeA,KAEnB,MAEMC,EAAS,gDAAAC,OAAmDL,EAAK,SAAAK,OAFrDC,0CAEsE,QAAAD,OADvEC,qBAEjBC,MAAMH,GACLI,MAAKC,IACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,+BAEpB,OAAOF,EAASG,MAAM,IAEzBJ,MAAKK,IACFC,OAAOC,SAASC,KAAOH,EAAY,MAAE,GAAS,IAAC,IAElDI,OAAMC,IACHC,QAAQD,MAAM,sDAAuDA,EAAM,GAC7E,EASJ,OACEE,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,YAAY,QAAQC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kCACJH,EAAAA,EAAAA,MAAA,OAAKC,MAAOpC,EAAOC,UAAUqC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,MAAO1B,EACP2B,SAAWC,GAAM3B,EAAS2B,EAAEC,OAAOH,OACnCI,YAAY,0DACZT,MAAOpC,EAAOK,MACdyC,UAhBeC,IACH,UAAdA,EAAMC,KACR9B,GACF,KAeIqB,EAAAA,EAAAA,KAAA,UAAQU,QAAS/B,EAAckB,MAAOpC,EAAOW,OAAO2B,SAAC,sBAM7D,C","sources":["pages/SearchBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction SearchBar() {\r\n  const [query, setQuery] = useState('');\r\n  const handleSearch = () => {\r\n    // 검색 버튼을 눌렀을 때의 동작을 여기에 작성합니다.\r\n    const GoogleKey = process.env.REACT_APP_API_GOOGLEKEY;\r\n    const GoogleId = process.env.REACT_APP_API_GOOGLEID;\r\n    const GoogleApi = `https://www.googleapis.com/customsearch/v1?q=${query}&key=${GoogleKey}&cx=${GoogleId}`;\r\n    fetch(GoogleApi)    \r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(data => {\r\n        window.location.href = data['items'][0]['link'];\r\n    })\r\n    .catch(error => {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n    }); \r\n\r\n  };\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{paddingLeft:'80px'}}>\r\n      <h1>Search from Namu with Google</h1>\r\n      <div style={styles.container}>\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          placeholder=\"검색어를 입력하세요\"\r\n          style={styles.input}\r\n          onKeyDown={handleKeyDown}\r\n        />\r\n        <button onClick={handleSearch} style={styles.button}>\r\n          검색\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '300px',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    padding: '8px',\r\n    fontSize: '16px',\r\n    borderRadius: '4px 0 0 4px',\r\n    border: '1px solid #ccc',\r\n  },\r\n  button: {\r\n    padding: '8px 16px',\r\n    fontSize: '16px',\r\n    borderRadius: '0 4px 4px 0',\r\n    border: '1px solid #ccc',\r\n    backgroundColor: '#007BFF',\r\n    color: 'white',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default SearchBar;\r\n"],"names":["styles","container","display","alignItems","width","input","flex","padding","fontSize","borderRadius","border","button","backgroundColor","color","cursor","query","setQuery","useState","handleSearch","GoogleApi","concat","process","fetch","then","response","ok","Error","json","data","window","location","href","catch","error","console","_jsxs","style","paddingLeft","children","_jsx","type","value","onChange","e","target","placeholder","onKeyDown","event","key","onClick"],"sourceRoot":""}